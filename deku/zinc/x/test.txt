(setglobal Test!
  (let
    (b/81 = "Test"
     ddc/82 = (function a/84[int] (if (!= a/84 0) "bab" "rab"))
     res/85 = (apply ddc/82 1)
     x/86 = (function b/88[int] : int (+ 1 b/88))
     ress/89 =[int] (apply x/86 2))
    (makeblock 0 b/81 ddc/82 res/85 x/86 ress/89)))
	branch L3
L1:	acc 0
	push
	const 1
	addint
	return 1
L2:	acc 0
	push
	const 0
	neqint
	branchifnot L4
	const "bab"
	return 1
L4:	const "rab"
	return 1
L3:	const "Test"
	push
	closure L2, 0
	push
	const 1
	push
	acc 1
	apply 1
	push
	closure L1, 0
	push
	const 2
	push
	acc 1
	apply 1
	push
	acc 0
	push
	acc 2
	push
	acc 4
	push
	acc 6
	push
	acc 8
	makeblock 5, 0
	pop 5
	setglobal Test!

